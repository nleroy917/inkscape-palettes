import sys
from typing import List
from PIL import ImageColor
from argparse import ArgumentParser


def build_parser() -> ArgumentParser:
    parser = ArgumentParser()
    parser.add_argument(
        "-f", "--file", type=str, help="Hexadecimal color code", required=True
    )
    parser.add_argument(
        "-n",
        "--name",
        type=str,
        help="Name of the palette",
        required=False,
        default="Untitled",
    )
    return parser


def hex2rgb(hex: str):
    return ImageColor.getrgb(hex)


def read_in_codes(file: str) -> List[str]:
    with open(file, "r") as f:
        return [line.strip() for line in f.readlines()]


def write_out_palette(name: str, rgb_values: List[str]) -> None:
    """
    Write out a palette file in the .gpl format. Should look like:

    GIMP Palette
    Name: My Palette
    #
    # Generated by Nathan LeRoy
    #
    5  40  91
    7  57 132
    9  75 172
    11  92 213
    """
    with open(f"{name}.gpl", "w") as f:
        f.write("GIMP Palette\n")
        f.write(f"Name: {name}\n")
        f.write("#\n")
        f.write("# Generated by Nathan LeRoy\n")
        f.write("#\n")
        for rgb in rgb_values:
            f.write(f"{rgb[0]}\t{rgb[1]}\t{rgb[2]}\n")


def main():
    parser = build_parser()
    args = parser.parse_args()
    codes = read_in_codes(args.file)
    rgb_values = [hex2rgb(code) for code in codes]
    write_out_palette(args.name, rgb_values)
    return 0


if __name__ == "__main__":
    try:
        sys.exit(main())
    except KeyboardInterrupt:
        print("Gooybye!")
        sys.exit(1)
